snippet local
[[source]]
url = "http://localhost:3030/simple"
verify_ssl = false
name = "local"

endsnippet

snippet py
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "$1"
description = ""
version = "0.0.0"
authors = ["RobbieClarken <robbie.clarken@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/RobbieClarken/$1"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python",
]

[tool.poetry.scripts]
$1 = "$1.main:main"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
coverage = {version = "*", allows-prereleases = true, extras = ["toml"]}
flake8 = "*"
isort = {version = "*", extras = ["pyproject"]}
mypy = "*"
pytest = "*"
pytest-mock = "*"

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
include_trailing_comma = true
known_first_party = "$1"
line_length = 100
lines_after_imports = 2
multi_line_output = 3

[tool.black]
line-length = 100

[tool.coverage.run]
branch = true
omit = [
  "*_test.py",
]
source = [
  "$1",
]

[tool.coverage.paths]
source = [
  "src/$1",
  ".tox/*/lib/python*/site-packages/$1",
]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
  "raise NotImplementedError()"
]
endsnippet

snippet musl
[target.x86_64-unknown-linux-musl]
linker = "x86_64-linux-musl-gcc"
endsnippet
