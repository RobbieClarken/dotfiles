module.exports = {
  namedExports: {
    '@angular/animations': [
      'animate',
      'animateChild',
      'group',
      'query',
      'style',
      'transition',
      'trigger',
    ],
    '@angular/core': [
      'AfterContentInit',
      'AfterViewChecked',
      'AfterViewInit',
      'ChangeDetectorRef',
      'Component',
      'ContentChild',
      'DebugElement',
      'Directive',
      'DoCheck',
      'ElementRef',
      'EventEmitter',
      'Host',
      'HostBinding',
      'HostListener',
      'Injectable',
      'Injector',
      'Input',
      'IterableDiffers',
      'NgModule',
      'OnChanges',
      'OnInit',
      'Optional',
      'Output',
      'Provider',
      'SimpleChanges',
      'TemplateRef',
      'ViewChild',
      'ViewContainerRef',
      'ViewEncapsulation',
    ],
    '@angular/core/testing': [
      'async',
      'ComponentFixture',
      'fakeAsync',
      'inject',
      'TestBed',
      'tick',
    ],
    '@angular/common': [
      'CommonModule',
    ],
    '@angular/forms': [
      'FormControl',
      'FormGroup',
      'FormsModule',
      'ReactiveFormsModule',
      'ValidatorFn',
      'Validators',
    ],
    '@angular/platform-browser': [
      'BrowserModule',
      'By',
    ],
    '@angular/common/http': [
      'HTTP_INTERCEPTORS',
      'HttpClient',
      'HttpClientModule',
      'HttpErrorResponse',
    ],
    '@angular/common/http/testing': [
      'HttpClientTestingModule',
      'HttpTestingController',
    ],
    '@angular/platform-browser/animations': [
      'BrowserAnimationsModule',
      'NoopAnimationsModule',
    ],
    '@angular/platform-browser-dynamic/testing': [
      'BrowserDynamicTestingModule',
    ],
    '@angular/router': [
      'ActivatedRoute',
      'ActivatedRouteSnapshot',
      'CanActivate',
      'CanDeactivate',
      'ParamMap',
      'Resolve',
      'Router',
      'RouterModule',
      'RouterStateSnapshot',
      'Routes',
      'UrlSegment',
    ],
    '@ng-bootstrap/ng-bootstrap': [
      'NgbActiveModal',
    ],
    'rxjs/Observable': [
      'Observable',
    ],
    'rxjs/Subscription': [
      'ISubscription',
    ],
    'rxjs/operators': [
      'map',
      'switchMap',
    ],
  },
  sortImports: false,
}
