#!/usr/bin/env bash

# Helper script for vim-tmux-navigator. Should exit 0 if the current pane is running vim,
# 1 otherwise.
#
# The following should be added to `tmux.conf` to configure tmux use this script to
# determine whether to foward keys to vim:
#
# ```tmux
# is_vim="tmux-check-if-vim #{pane_tty}"
# bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
# bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
# bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
# bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
# ```
#
# Requirements:
# - gnu awk
# - gnu grep
# - pstree

set -eu

pane_tty=$1

if [[ $(uname) = Darwin ]]; then

  # The awk regex below...
  # * should match:
  #     x 1 vim
  #     x 1 vim file.txt
  #     x 1 /usr/local/bin/vim
  #     x 1 /usr/local/bin/vim file.txt
  # * should not match:
  #     x 1 /Users/user/.dotfiles/vim/plugged/LanguageClient-neovim/bin/languageclient

  ps -o state= \
     -p "$(
       pstree "$(ps -o pid= -t "$pane_tty" | head -1)" | awk '/\y(vim|view|nvim)(\s|$)/{ print $2 }' | head -1
     )" 2>/dev/null \
       | grep -qE '^[^TXZ]'

else

  if pipenv_pid=$(pgrep -t "${pane_tty/\/dev\/}" pipenv); then
    ps -o state=,comm= -p "$(pstree -p "$pipenv_pid" | grep -Po '\(\d+\)' | tr -d '()')"
  else
    ps -o state=,comm= -t "$pane_tty"
  fi | grep -qP '^[^TXZ] (vim|view|nvim)$'

fi
